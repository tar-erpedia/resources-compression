אז... למה?
resources שוקלים לא מעט, ולכן כאשר משתמש טוען את העמוד איטנרנט שלו יכולה להיווצר איטיות,
 זה מכיוון שיש פנייה לשרת לקבלת הresources וככל שהקובץ יותר גדול ככה זה יקח יותר זמן.

הפתרון:
compression
יש אלגוריתמים ידועים שמכווצים את הresources, כלומר, גורמים להם לשקול הרבה פחות, כאשר יש פגיעה מימינאלית מאוד באיכות התמונה (לרוב אפילו לא מורגשת).

בספרייה זו אנו נשתמש בשני הפורמטים היותר ידועים שיש היום - webp, avif

בהרצת התוכנית אתם תוכלו לבחור פורמט, ותיווצר לכם תיקייה חדשה, שהיא copy של תיקיית Assets שלכם, רק שהresources אשר מתאפשר לכווץ אותם, יכווצו
(ויחליפו את הקובץ המקורי - אין לנו כבר שימוש בו).
(הערה: ככל שתבחרו "איכות" נמוכה יותר עבור הכיווץ, ככה הקובץ ישקול פחות, לכן אפשר לשחק עם זה לראות מה הכי נמוך שאפשר לרדת שהresource עדיין נראה טוב).

אז... באיזה פורמט לבחור?
כיום, avif יותר יעיל מwebp לרוב (וגם לוקח יותר זמן, אבל אנחנו בסדר עם זה כי זו פעולה חד פעמית גם ככה).
הבעיה, שהוא תומך בגרסת כרום 85+, מה שלרוב אצלינו לא משתמשים.

ולכן אנחנו נעדיף לכווץ בשתי האופציות, ולבקש מהדפדפן להשתמש בavif אם יכול, אחרת בwebp.
לדוגמא:
<picture>
          <source srcSet="/images/file.avif" type="image/avif" />
          <"img src="/file.webp />
</picture>

מה שקורה פה, הדפדפן ינסה להשתמש בavif, אם תומך, בכבוד, אחרת, ימשוך את הwebp.
ככה, כאשר בעתיד נעדכן לכרום 85+, אוטומתית נשתמש בקבצי avif שלנו ללא שינוי בקוד.